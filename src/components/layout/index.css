@value fontSerif, fontDisplay, animDur from "../../index.css";
@value * as colors from "../../palette.css";

.bug {
    position: fixed;
    right: 1em;
    bottom: 1em;
}

.layout {
    position: relative;
}

.login {
    position: fixed;
    top: 0.2em;
    right: 0.2em;

    font-size: 0.8em;
}

.loadMsg {
    color: colors.cta;
    font: 300 0.95em/1.9 fontDisplay;

    i {
        opacity: 1;
        padding: 0 0.1em;
        font-weight: bold;
        font-style: normal;

        animation : infinite loadMsg0 steps(1, start) 1s;
    }

    .ell1 {
        animation-name: loadMsg1;
    }

    .ell2 {
        animation-name: loadMsg2;
    }
}

@keyframes loadMsg0 {
    25% {
        opacity: 0;
    }
}

@keyframes loadMsg1 {
    50% {
        opacity: 0;
    }
}

@keyframes loadMsg2 {
    75% {
        opacity: 0;
    }
}

.github {
    display: block;
    height: 2em;
    width: 2em;
    margin: 0 auto 0.2em;

    transition: fill animDur;

    &:hover {
        fill: #fff9;
    }
}

.ver {
    opacity: 0.3;

    font: normal 0.8em/1 monospace;
}

.clear {
    position: fixed;
    bottom: 1em;
    left: 1em;
}

.debug {
    position: fixed;
    top: 0;
    opacity: 0.2;
    max-height: 100vh;
    width: 400px;
    overflow-y: auto;
    font-size: 0.75em;
    z-index: -1;
    pointer-events: none;
}

.notifications {
    position: fixed;
    right: 0;
    bottom: 1em;
    left: 0;

    display: flex;
    flex-flow: column;
    align-items: center;
    justify-content: center;
}

.notification {
    margin-top: 0.4em;
    padding: 0.8em 1.4em;

    font-size: 0.8em;
    color: colors.grey;

    border-radius: 1em;
    background: colors.header;

    span {
        margin-left: 0.4em;
        font-family: fontsSerif;
        text-transform: uppercase;
        color: #fff;
    }

    /* todo: compose or something */
    button {
        display: inline-block;
        margin-left: 0.4em;
        border: none;
        background: none;

        color: colors.ctaLight;
    }
}

.notificationIn {
    composes: notification;

    animation: forwards fadeIn 1s;
}

.notificationOut {
    composes: notification;
    composes: fadeOut from "../../fade.css";
}

.notificationin {
    composes: notification;
    composes: fadeIn from "../../fade.css";
}
